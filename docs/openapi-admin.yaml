# Admin and Webhook API Endpoints
# This file contains the admin-specific endpoints that extend the main OpenAPI specification

# Admin User Management Endpoints
/admin/users:
  get:
    summary: Get All Users (Admin)
    description: Get a paginated list of all users with admin capabilities
    tags: [Admin]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: page
        in: query
        description: Page number (1-based)
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        description: Number of items per page
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
      - name: search
        in: query
        description: Search term for email or ID
        schema:
          type: string
      - name: role
        in: query
        description: Filter by user role
        schema:
          type: string
          enum: [MEMBER, MODERATOR, ADMIN]
      - name: sortBy
        in: query
        description: Field to sort by
        schema:
          type: string
          enum: [id, email, role]
          default: id
      - name: sortOrder
        in: query
        description: Sort order
        schema:
          type: string
          enum: [asc, desc]
          default: asc
    responses:
      '200':
        description: List of users with pagination
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserAdmin'
                pagination:
                  $ref: '#/components/schemas/Pagination'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'

/admin/users/{id}:
  put:
    summary: Update User (Admin)
    description: Update user information (admin only)
    tags: [Admin]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              role:
                type: string
                enum: [MEMBER, MODERATOR, ADMIN]
              appCurrencyBalance:
                type: integer
    responses:
      '200':
        description: User updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdmin'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '404':
        $ref: '#/components/responses/NotFound'

  delete:
    summary: Delete User (Admin)
    description: Delete a user account (admin only)
    tags: [Admin]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: integer
    responses:
      '200':
        description: User deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "User deleted successfully"
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '404':
        $ref: '#/components/responses/NotFound'

# Webhook Management Endpoints
/admin/webhooks:
  get:
    summary: Get All Webhooks
    description: Get all webhook configurations (admin only)
    tags: [Webhooks]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    responses:
      '200':
        description: List of webhooks
        content:
          application/json:
            schema:
              type: object
              properties:
                webhooks:
                  type: array
                  items:
                    $ref: '#/components/schemas/Webhook'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'

  post:
    summary: Create Webhook
    description: Create a new webhook configuration (admin only)
    tags: [Webhooks]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookInput'
    responses:
      '201':
        description: Webhook created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  $ref: '#/components/schemas/Webhook'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'

/admin/webhooks/{id}:
  get:
    summary: Get Webhook by ID
    description: Get webhook configuration by ID (admin only)
    tags: [Webhooks]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Webhook ID
        schema:
          type: integer
    responses:
      '200':
        description: Webhook configuration
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  $ref: '#/components/schemas/Webhook'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '404':
        $ref: '#/components/responses/NotFound'

  put:
    summary: Update Webhook
    description: Update webhook configuration (admin only)
    tags: [Webhooks]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Webhook ID
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookInput'
    responses:
      '200':
        description: Webhook updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  $ref: '#/components/schemas/Webhook'
      '400':
        $ref: '#/components/responses/ValidationError'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '404':
        $ref: '#/components/responses/NotFound'

  delete:
    summary: Delete Webhook
    description: Delete webhook configuration (admin only)
    tags: [Webhooks]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Webhook ID
        schema:
          type: integer
    responses:
      '200':
        description: Webhook deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Webhook deleted successfully"
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '404':
        $ref: '#/components/responses/NotFound'

/admin/webhooks/{id}/test:
  post:
    summary: Test Webhook
    description: Test webhook configuration (admin only)
    tags: [Webhooks]
    security:
      - FrontendAuth: []
      - ApiKeyAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Webhook ID
        schema:
          type: integer
    responses:
      '200':
        description: Webhook test result
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Whether the test was successful
                statusCode:
                  type: integer
                  description: HTTP status code from webhook endpoint
                responseTime:
                  type: number
                  description: Response time in milliseconds
                error:
                  type: string
                  nullable: true
                  description: Error message if test failed
      '401':
        $ref: '#/components/responses/Unauthorized'
      '403':
        $ref: '#/components/responses/Forbidden'
      '404':
        $ref: '#/components/responses/NotFound'
